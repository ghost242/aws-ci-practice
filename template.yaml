# Headers
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  AWS Sample SAM Template for AWS

# Parameters

# Mappings

# Conditions

# Resources
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    CodeUri: .
    Runtime: python3.7
    Timeout: 30

Resources:
  HelloWorldFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      Handler: app_stack.hello_world.app.lambda_handler
      Policies:
        - SQSPollerPolicy:
            QueueName: !GetAtt DataPipeQueue.QueueName
        - SQSSendMessagePolicy:
            QueueName: !GetAtt DataPipeQueue.QueueName
      Environment:
        Variables:
          DATAPIPE_QUEUEURL: !Ref DataPipeQueue
      Events:
        GetHelloWorld:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /hello
            Method: get
        PostHelloWorld:
          Type: Api
          Properties:
            Path: /hello
            Method: post
        HelloWorldLogs:
          Type: CloudWatchLogs
          Properties:
            LogGroupName: !Ref HelloWorldLogsGroup
            FilterPattern: Error
  DataSenderFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app_stack.hello_lambda.app.lambda_handler
      Policies:
        - S3CrudPolicy:
            BucketName: !Ref DataStoreS3
      Environment:
        Variables:
          DATASTORE_BUCKETNAME: !Ref DataStoreS3
      Events:
        DataPipeEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt DataPipeQueue.Arn
            BatchSize: 10
            Enabled: true
        DataSenderLogs:
          Type: CloudWatchLogs
          Properties:
            LogGroupName: !Ref DataSenderLogsGroup
            FilterPattern: Error
  DataStoreS3:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: "Private"
      BucketName: "sam-practice-data-store-s3"
  DataStoreS3Policy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref DataStoreS3
      PolicyDocument:
        Statement:
          Effect: Allow
          Principal: "*"
          Action: "s3:*"
          Resource: !Join ["", ["arn:aws:s3:::", !Ref "DataStoreS3", "/*"]]
  DataPipeQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: "DataPipeQueue"
  DataPipeQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref DataPipeQueue
      PolicyDocument:
        Statement:
          Effect: Allow
          Principal: "*"
          Action: "sqs:*"
          Resource: "*"
  HelloWorldLogsGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 7
  DataSenderLogsGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 7

# Outputs
Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  HelloWorld:
    Description: "Hello World Lambda API entrypoint"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
  HelloWorldFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt HelloWorldFunction.Arn
  DataSenderFunction:
    Description: "Data send & receive function ARN"
    Value: !GetAtt DataSenderFunction.Arn
  HelloWorldFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt HelloWorldFunctionRole.Arn